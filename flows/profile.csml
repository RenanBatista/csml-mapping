import {GlobalCommands, OptionSelected as select} from global_functions

// TODO move to separate flow
start:
  do user_id = 1  // ID --> channel:uniqueid  --> wa:19177777777  wa5599889900000:19198333333 
  do req = HTTP("https://608874f1a6f4a30017426794.mockapi.io/modules/user/{{user_id}}")
  do res = req.send()

// namespaccing of session variables
// user_....
// activity_....
// results_.... ==stats
// content_....
// config_... --> i18nstrings?
/* 
  progress = user_results_object
*/
  remember profileName = res.name
  remember profileState = res.state
  remember profileModulesDone = res.modulesdones
  remember profileUnitsDone = res.unitsdone
  remember profileActivitiesDone = res.activitiesdone

  goto step profile_options
  
profile_options:
  say 
    "{{profileName}} (üá∫üá∏ {{profileState}})
    \nM√≥dulos feitos: {{profileModulesDone}}
    \nUnidades feitas: {{profileUnitsDone}}
    \nAtividades feitas: {{profileActivitiesDone}}
    \nVoc√™ pode fazer ‚öô **ajustes** no seu perfil, pedir ‚õëÔ∏è **ajuda** ou ir para o üè† **in√≠cio** 
    "
  hold
  // check if global command triggered
  do atomic = GlobalCommands(event.text)

  if (atomic){
    do stepname = atomic.step
    do flowname = atomic.flow
    goto $stepname@$flowname
  } 
  // TODO : make a normalization fuction  if (fn.match(event.text,"INICIO"))
  else if (event.text.match_regex("\s*(?i)(in)[√≠i√çi](cio)\s*")) {
    goto flow menu
  }
  else if (event.text.match_regex("\s*(?i)(ajustes)\s*")) {
    say "Work in progress.. "
    goto step profile_options
  }
  else if (event.text.match_regex("\s*(?i)(ajuda)\s*")) {
    say "Work in progress.. "
    goto step profile_options
  }
  else {
    say "ü§îHmm... Eu n√£o entendi"
    goto step profile_options
  }
